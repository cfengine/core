 bundle agent main
  {
  vars:
    "cron_data" data => readjson("$(this.promise_dirname)/CRON.json", 1000k);
    "owner" slist => getvalues("cron_data[owner]");
    "zone_type" slist => { "zone_global", "non_global", "all" };
    "script_cnt" slist => getvalues("cron_data[setup]");

  methods:
    "run_cron" usebundle => doit("$(zone_type)","$(owner)","$(script_cnt)");
    "run_cron" usebundle => doit("$(zone_type)","$(owner)","$(script_cnt)"),
ifvarclass => "$(cron_data[run_cron][$(zone_type)][$(owner)][$(script_cnt)][time])",
action => immediate_report_verbose;

#    commands:
#"/bin/echo foobar"
#action => immediate_report_verbose,
#ifvarclass => "$(cron_data[run_cron][$(not_there)][$(owner)][$(script_cnt)][time])";

#        "/bin/echo $(zone_type) $(owner) $(script_cnt)"
#action => immediate_report_verbose,
##ifvarclass => "foobar";
#ifvarclass => "$(cron_data[run_cron][$(zone_type)][$(owner)][$(script_cnt)][time])";
        
#      any::
#        "/bin/echo $(zone_type)";
#        "/bin/echo $(cron_data[run_cron][$(zone_type)][$(owner)][$(script_cnt)][time])";
#        "/bin/echo $(zone_type) $(owner) $(script_cnt)   $(cron_data[run_cron][$(zone_type)][$(owner)][$(script_cnt)][time])";

#      any::
#        "/bin/echo this is an unconstrained commands promise";
#      any::
#        "/bin/echo this commands promise is constrained by an if attribute"
#        if => Hr09,
#        action => immediate_report_verbose;
#      Hr09::
#        "/bin/echo 9am hour verbose logging"
#          if => windows,
#          action => immediate_report_verbose;
  }
  body action immediate_report_verbose
  {
    expireafter => "0";
    report_level => "verbose";
  }
bundle agent doit(one,two,three)
{
  commands:
    "/bin/echo $(one) $(two) $(three)";
  reports:
    "doit($(one),$(two),$(three)";
}
