#######################################################
#
# Same as 105.cf, but two separate edit_line promises (correctly done!)
# Test promise_kept+repaired and cancel_kept+repaired (multiple promises set classes)
# Insert lines to a file (setting/clearing classes), verify that insert
# promise is kept (which sets/clears more classes)
#
# Present in both 00_basics/03_bodies and 10_files/05_classes
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  methods:
      "" usebundle => dcs_all_negative_classes("t");
      "" usebundle => init2;
}

bundle agent init2
{
  files:
      "$(G.testfile)"
      create => "true",
      edit_line => test_insert($(dcs_strings.multiline_potatoes));
}

#######################################################

bundle edit_line test_insert(str)
{
  insert_lines:
      "$(str)"
      classes => dcs_all_classes("t");
}

bundle agent test
{
  files:
      "$(G.testfile)"
      create => "true",
      edit_line => test_insert2;
}

bundle edit_line test_insert2
{
  insert_lines:
      "$(dcs_strings.multiline_potatoes_lesser)"
      classes => dcs_all_classes("t");
}

#######################################################

bundle agent check
{
  methods:
      "" usebundle => dcs_all_classes_to_string("t"),
      useresult => "actual";

      # NOTE: bundle edit_line test_insert(str) is CACHED, so even though it
      # is mentioned in init and we call test_insert2 from test, the promises are
      # the same, and are only executed ONCE, so it only sets the repaired
      # promises.

      # TODO: verify this is as expected
      "" usebundle => dcs_check_strcmp('{ "t_cancel_notkept", "t_promise_kept", "t_promise_repaired" }',
                                       "$(actual[str])",
                                       $(this.promise_filename),
                                       "no");
}
