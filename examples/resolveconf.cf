#  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commerical Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

#######################################################
#
# Resolve conf
#
#######################################################

bundle common g # globals
{
  vars:

      "searchlist"  slist => { 
                               "search iu.hio.no", 
                               "search cfengine.com" 
      };

      "nameservers" slist => { 
                               "128.39.89.10", 
                               "128.39.74.16",
                               "192.168.1.103"
      };
  classes:

      "am_name_server" expression => reglist("@(nameservers)","$(sys.ipv4[eth1])");
}

#######################################################

body common control

{
    any::

      bundlesequence  => {
			   "g",
			   resolver(@(g.searchlist),@(g.nameservers))
      };   

      domain => "iu.hio.no";
}

#######################################################

bundle agent resolver(s,n)

{
  files:

      # When passing parameters down, we have to refer to
      # a source context

      "$(sys.resolv)"  # test on "/tmp/resolv.conf" #

      create        => "true",
      edit_line     => doresolv("@(this.s)","@(this.n)"),
      edit_defaults => reconstruct;
      # or edit_defaults => modify
}

#######################################################
# For the library
#######################################################

bundle edit_line doresolv(s,n)

{
  vars:

      "line" slist => { @(s), @(n) };

  insert_lines:

      "$(line)";

}

#######################################################

body edit_defaults reconstruct
{
      empty_file_before_editing => "true";
      edit_backup => "false";
      max_file_size => "100000";
}

#######################################################

body edit_defaults modify
{
      empty_file_before_editing => "false";
      edit_backup => "false";
      max_file_size => "100000";
}


