#######################################################
#
# Test laterthan()
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent test
{
  classes:
     "after_year_1000" expression => laterthan(1000,1,1,0,0,0),
                            scope => "namespace";

     "after_year_1000_month" expression => laterthan(1000,12,1,0,0,0),
                            scope => "namespace";

     "after_year_1000_day" expression => laterthan(1000,12,31,0,0,0),
                            scope => "namespace";

     "after_year_1000_hour" expression => laterthan(1000,12,31,23,0,0),
                            scope => "namespace";

     "after_year_1000_minute" expression => laterthan(1000,12,31,23,59,0),
                            scope => "namespace";

     "after_year_1000_second" expression => laterthan(1000,12,31,23,59,59),
                            scope => "namespace";


    "after_year_5000" expression => laterthan(5000,1,1,0,0,0),
                            scope => "namespace";

     "after_year_5000_month" expression => laterthan(5000,12,1,0,0,0),
                            scope => "namespace";

     "after_year_5000_day" expression => laterthan(5000,12,31,0,0,0),
                            scope => "namespace";

     "after_year_5000_hour" expression => laterthan(5000,12,31,23,0,0),
                            scope => "namespace";

     "after_year_5000_minute" expression => laterthan(5000,12,31,23,59,0),
                            scope => "namespace";

     "after_year_5000_second" expression => laterthan(5000,12,31,23,59,59),
                            scope => "namespace";

}

#######################################################

bundle agent check
{
  classes:
      "after_year_1000_ok" and => {
                   "after_year_1000",
                   "after_year_1000_month",
                   "after_year_1000_day",
                   "after_year_1000_hour",
                   "after_year_1000_minute",
                   "after_year_1000_second"
      };

      "after_year_5000_ok" not => or(
                   "after_year_5000",
                   "after_year_5000_month",
                   "after_year_5000_day",
                   "after_year_5000_hour",
                   "after_year_5000_minute",
                   "after_year_5000_second"
      );


      "ok" and => { "after_year_1000_ok", "after_year_5000_ok" };

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}

