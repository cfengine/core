body common control
{
      inputs => { "../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
  files:
    "$(G.testroot)$(const.dirsep)delete-me"
      create => "true";
    "$(G.testroot)$(const.dirsep)sub-dir/."
      create => "true";
    "$(G.testroot)$(const.dirsep)sub-dir/sub-file"
      create => "true";
    "$(G.testroot)$(const.dirsep)set-colon-field"
      create => "true",
      content => "me:x:1001:1001::/home/me:/bin/sh";
    "$(G.testroot)$(const.dirsep)delete-lines-matching"
      create => "true",
      content => "
foo 1
bar 2
baz 3
me:x:101:doo
";
    "$(G.testroot)$(const.dirsep)regex-replace"
      create => "true",
      content => "I dare you to change my policy foo";
    "$(G.testroot)$(const.dirsep)edit-template-string"
      create => "true",
      content => "From a particular point of view";
    "$(G.testroot)$(const.dirsep)xml-insert-tree"
      create => "true",
      edit_xml => xml_insert_tree_nopath("<Root/>");
    "$(G.testroot)$(const.dirsep)build-xpath"
      create => "true";
    "$(G.testroot)$(const.dirsep)perms"
      create => "true";
    "$(G.testroot)$(const.dirsep)rename-me"
      create => "true";
    "$(G.testroot)$(const.dirsep)transformer"
      create => "true";
}

bundle agent test
{
  meta:
    "test_soft_fail" string => "(solaris|aix|hpux)|(debian_7.i686)",
      meta => { "ENT-6537", "ENT-6540" };
      # ENT-6537 debian 7 dirent has extra ',' entry
      # ENT-6540 exotics fail to delete chroot

    "description" -> { "ENT-5301" }
      string => "Test that files promises in --simulate=manifest mode produce proper output and only make changes in chroot";

  commands:
    # add --verbose here and look at the .actual log for debugging sub policy runs
    "$(sys.cf_agent) -Kf $(this.promise_filename).sub --simulate=manifest > $(this.promise_filename).temp 2>&1"
      contain => in_shell,
      handle => "agent_run_complete",
      comment => "Run sub policy in manifest mode and capture output to $(this.promise_filename).actual file.";
    "$(G.sed)"
      args => " \
-e 's,$(sys.workdir),WORKDIR,g' \
-e 's/[0-9]*\.changes/PID.changes/' \
-e 's/[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}[[:blank:]][0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\}[[:blank:]][-+][0-9]\{4\}/TIMESTAMP/' \
-e 's/Size: [0-9]*/Size: SIZE/' \
$(this.promise_filename).temp > $(this.promise_filename).actual",
      contain => in_shell,
      handle => "warning_line_normalized",
      depends_on => { "agent_run_complete" },
      comment => "Normalize pid, timestamp and file sizes so that we can compare to an expected output.";
}

bundle agent check
{
  methods:
    "check" usebundle => dcs_check_diff("$(this.promise_filename).actual",
                                        "$(this.promise_filename).expected",
                                        "$(this.promise_filename)");
}
bundle edit_xml xml_insert_tree_nopath(treestring)
{
  insert_tree:
      '$(treestring)';
}

