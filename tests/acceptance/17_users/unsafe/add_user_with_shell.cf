#######################################################
#
# Test adding a user with a specific shell.
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub",
                  "user_queries.cf.sub",
                  "disable_sudo_tty_requirement.cf.sub"
                };
      bundlesequence  => { default("$(this.promise_filename)") };
      cache_system_functions => "no";
}

#######################################################

bundle agent init
{
  # Remove him first, should he already be present.
  users:
    "johndoe"
      policy => "absent";

  methods:
      "any" usebundle => disable_sudo_tty_requirement;
}

#######################################################

bundle agent test
{
  users:
    "johndoe"
      policy => "present",
      shell => "$(G.cat)";
}

#######################################################

bundle agent check
{
  vars:
    "currentdir" string => dirname("$(this.promise_filename)");

  classes:
    !windows::
      "ok" expression => regcmp(".*Succeeded.*", execresult("sudo su johndoe $(currentdir)$(const.dirsep)add_user_with_shell.txt", "useshell"));

  reports:
    ok|windows::
      "$(this.promise_filename) Pass";
    !ok.!windows::
      "$(this.promise_filename) FAIL";
}
