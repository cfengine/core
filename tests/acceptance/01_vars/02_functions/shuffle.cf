#######################################################
#
# Test reverse()
#
#######################################################

body common control
{
  inputs => { "../../default.cf.sub" };
  bundlesequence  => { default("$(this.promise_filename)") };
  version => "1.0";
}

#######################################################

bundle agent init
{
vars:
  "a" slist => { "a", "b", "c", "d", "e", "f", "g" };
  "b" slist => { };
}

#######################################################

bundle agent test
{
vars:
  "sa" slist => shuffle("init.a", "skruf");
  "sb" slist => shuffle("init.b", "skruf");
}


#######################################################

bundle agent check
{
vars:
      "ja" string => join(",", "test.sa");
      "jb" string => join(",", "test.sb");

      "ea" string => "g,e,c,f,a,b,d";
      "eb" string => "";

classes:
    any::
      "ok_a" expression => strcmp($(ea), $(ja));
      "ok_b" expression => strcmp($(eb), $(jb));

      "ok" and => { "ok_a", "ok_b" };

reports:
    DEBUG::
        "a '$(ja)' <> '$(ea)'";
        "b '$(jb)' <> '$(eb)'";

    ok::
        "$(this.promise_filename) Pass";
    !ok::
        "$(this.promise_filename) FAIL";
}
