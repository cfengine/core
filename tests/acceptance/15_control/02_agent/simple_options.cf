body common control
{
  inputs => { "../../default.cf.sub" };
  bundlesequence => { default("$(this.promise_filename)") };
}

bundle agent init
{
  commands:
    "$(sys.cf_agent) -z" classes => kept;       # unknown option should cause --help
    "$(sys.cf_agent) --version" classes => kept;
    "$(sys.cf_agent) --help" classes => kept;
    "$(sys.cf_agent) --log-modules=help" classes => kept;

# --show-evaluated-classes needs DoCleanupAndExit()
    "$(sys.cf_agent) --show-evaluated-classes --file $(this.promise_dirname)/simple_options.cf.sub" classes => kept;
# --show-evaluated-vars needs DoCleanupAndExit()
    "$(sys.cf_agent) --show-evaluated-vars --file $(this.promise_dirname)/simple_options.cf.sub" classes => kept;
# --color and any evaluation of policy (--file and not --help or --version) requires DoCleanupAndExit()
    "$(sys.cf_agent) --color --file $(this.promise_dirname)/simple_options.cf.sub" classes => kept;

    "$(sys.cf_agent) --self-diagnostics" classes => kept;
    # secret options! :p output man page!?
    "$(sys.cf_agent) -M" classes => kept;

# should cause error, can't use --trust-server without --bootstrap
    "$(sys.cf_agent) --trust-server";
}

body classes kept
{
  promise_kept => { "ok" };
  promise_repaired => { "ok" };
  cancel_notkept => { "ok" };
}

bundle agent check
{
  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
