#######################################################
#
# Test returnszero()
#
#######################################################

body common control
{
  inputs => { "../../default.cf.sub" };
  bundlesequence  => { default("$(this.promise_filename)") };   
  version => "1.0";
nova_edition::
  host_licenses_paid => "5";
}

bundle common g
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent init
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent test
{
vars:
	"dummy" string => "dummy";
}

#######################################################

bundle agent check
{
vars:
	"zero" string => "$(G.grep) -q root /etc/passwd";
	"one" string => "$(G.grep) -q gluequaggaunlikely /etc/passwd";
	"nxe" string => "/xbin/nosuchprogramexists";

classes:
	"zero_noshell" expression => returnszero("$(zero)", "noshell");
	"zero_useshell" expression => returnszero("$(zero)", "useshell");

	"one_noshell" not => returnszero("$(one)", "noshell");
	"one_useshell" not => returnszero("$(one)", "useshell");

	"nxe_noshell" not => returnszero("$(nxe)", "noshell");
	"nxe_useshell" not => returnszero("$(nxe)", "useshell");

	"ok" and => {
		    "zero_noshell", "zero_useshell",
		    "one_noshell", "one_useshell",
		    "nxe_noshell", "nxe_useshell",
		    };

reports:
    DEBUG.zero_noshell::
	"'$(zero)' returns 0 with noshell";
    DEBUG.!zero_noshell::
	"'$(zero)' erroneously returns non-zero with noshell";

    DEBUG.zero_useshell::
	"'$(zero)' returns 0 with useshell";
    DEBUG.!zero_useshell::
	"'$(zero)' erroneously returns non-zero with useshell";


    DEBUG.one_noshell::
	"'$(one)' returns non-zero with noshell";
    DEBUG.!one_noshell::
	"'$(one)' erroneously returns 0 with noshell";

    DEBUG.one_useshell::
	"'$(one)' returns non-zero with useshell";
    DEBUG.!one_useshell::
	"'$(one)' erroneously returns 0 with useshell";


    DEBUG.nxe_noshell::
	"'$(nxe)' returns non-zero with noshell";
    DEBUG.!nxe_noshell::
	"'$(nxe)' erroneously returns 0 with noshell";

    DEBUG.nxe_useshell::
	"'$(nxe)' returns non-zero with useshell";
    DEBUG.!nxe_useshell::
	"'$(nxe)' erroneously returns 0 with useshell";

    ok::
	"$(this.promise_filename) Pass";
    !ok::
	"$(this.promise_filename) FAIL";
}

#######################################################

bundle agent fini
{
vars:
	"dummy" string => "dummy";
}
