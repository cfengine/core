// suppress warnings for access to individual bytes of a uint32 in platform.h
objectIndex:libntech/libutils/platform.h

// cppcheck is not clever enough to see that if (i >= PLATFORM_CONTEXT_MAX) then 'found' is false
arrayIndexOutOfBounds:libenv/sysinfo.c:587

// 'psin' is assigned to 'ai->ai_addr' and 'ai' is returned to the caller
memleak:libntech/libcompat/getaddrinfo.c:153

// cppcheck doesn't understand va_copy() properly
va_list_usedBeforeStarted:libntech/libcompat/snprintf.c:1505
va_list_usedBeforeStarted:libntech/libcompat/snprintf.c:1506

// too cryptic code for cppcheck to see that the 'tmp' variable is initialized
// through a pointer to the same address space (and the same applies to 'dst')
uninitvar:libntech/libcompat/inet_pton.c:115
uninitvar:libntech/libcompat/snprintf.c:1494

// cppcheck doesn't like VA_COPY, it seems
Uninit:libntech/libcompat/snprintf.c:1505

// cppcheck completely confused by our macro-based enterprise stubs
returnDanglingLifetime:libpromises/enterprise_stubs.c:60
returnDanglingLifetime:libpromises/enterprise_stubs.c:121
returnDanglingLifetime:libpromises/enterprise_stubs.c:128
returnDanglingLifetime:libpromises/enterprise_stubs.c:153
returnDanglingLifetime:libpromises/enterprise_stubs.c:159
returnDanglingLifetime:libpromises/enterprise_stubs.c:165
returnDanglingLifetime:libpromises/enterprise_stubs.c:172

// generated file not in our control
nullPointer:libpromises/cf3lex.c
