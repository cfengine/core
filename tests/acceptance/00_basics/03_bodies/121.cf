#######################################################
#
# Test overlapping codes (with no match) with command and *_returncodes
# Insert lines to a file, the grep for a line which is there
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent init
{
  methods:
      "" usebundle => dcs_all_negative_classes("t");
      "" usebundle => dcs_makefile($(G.testfile),
                                   $(dcs_strings.multiline_potatoes));
}

# These set/clear global classes, so they can be tested in another bundle
body classes test_all_classes(prefix)
{
      promise_kept => { "$(prefix)_promise_kept" };
      promise_repaired => { "$(prefix)_promise_repaired" };
      repair_failed => { "$(prefix)_repair_failed" };
      repair_denied => { "$(prefix)_repair_denied" };
      repair_timeout => { "$(prefix)_repair_timeout" };
      cancel_kept => { "$(prefix)_cancel_kept" };
      cancel_repaired => { "$(prefix)_cancel_repaired" };
      cancel_notkept => { "$(prefix)_cancel_notkept" };
      kept_returncodes => { "10", "11" };
      repaired_returncodes => { "11" };
      failed_returncodes => { "11", "12" };
}

#######################################################

bundle agent test
{
  commands:
      "$(G.grep) linenotfound $(G.testfile)"
      classes => test_all_classes("t");
}

#######################################################

bundle agent check
{
      # These variables determine the conditions being tested
  vars:
      "expect[promise_kept]" string        => "";
      "expect[promise_repaired]" string        => "";
      "expect[repair_failed]" string        => "";
      "expect[repair_denied]" string        => "";
      "expect[repair_timeout]" string        => "";
      "expect[cancel_kept]" string        => "ON";
      "expect[cancel_repaired]" string        => "ON";
      "expect[cancel_notkept]" string        => "ON";
  methods:
      "" usebundle => dcs_all_classes_to_string("t"),
      useresult => "actual";

      "" usebundle => dcs_check_strcmp('{ "t_cancel_kept", "t_cancel_notkept", "t_cancel_repaired" }',
                                       "$(actual[str])",
                                       $(this.promise_filename),
                                       "no");
}
