######################################################
#
#  Basic test of promise module using the Python library
#
#####################################################
body common control
{
    inputs => { "../default.cf.sub" };
    bundlesequence  => { default("$(this.promise_filename)") };
    version => "1.0";
}

#######################################################

bundle common python_check
{
  classes:
    "python_f_string_support" expression => returnszero("/usr/bin/python3 -c 'f\"string\"'", "useshell");
}

bundle agent init
{
  meta:
      "test_skip_unsupported" string => "!python_f_string_support";

  vars:
    "test_string"
      string => "hello, modules";

  files:
    "$(G.testfile).src"
      create => "true",
      edit_line => insert_lines("$(test_string)");

    "$(G.testfile).dst"
      delete => init_delete;

    "$(this.promise_dirname)/cfengine.py"
      copy_from => local_cp("$(this.promise_dirname)/../../../misc/custom_promise_types/cfengine.py");

}

body delete init_delete
{
      dirlinks => "delete";
      rmdirs   => "true";
}

#######################################################

promise agent copy
{
    interpreter => "/usr/bin/python3";
    path => "$(this.promise_dirname)/copy.py";
}

bundle agent test
{
  meta:
    "description" -> { "CFE-3576" }
      string => "Test a simple promise module which uses library";

  copy:
    "$(G.testfile).dst"
      from => "$(G.testfile).src";
}

#######################################################

bundle agent check
{
  classes:
      "ok"
        expression => strcmp("$(init.test_string)", readfile("$(G.testfile).dst")),
        if => fileexists("$(G.testfile).dst");

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
