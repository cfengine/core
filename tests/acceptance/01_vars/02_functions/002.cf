#######################################################
#
# Test getgid()
#
#######################################################

body common control
{
  inputs => { "../../default.cf.sub" };
  bundlesequence  => { default("$(this.promise_filename)") };
  version => "1.0";
nova_edition::
  host_licenses_paid => "5";
}

#######################################################

bundle agent init
{
vars:
        "dummy" string => "dummy";
}

#######################################################

bundle agent test
{
vars:
  linux|freebsd|solaris|openbsd::
    "gid_daemon" int => getgid("daemon");
    "gid_sys" int => getgid("sys");
  darwin::
    "gid_daemon" int => getgid("daemon");
  !linux.!freebsd.!solaris.!darwin.!openbsd::
    "gid_daemon" string => "fixme";
    "gid_sys" string => "fixme";

  linux|solaris::
    "gid_0" int => getgid("root");
  freebsd|darwin|openbsd::
    "gid_0" int => getgid("wheel");
  !linux.!freebsd.!solaris.!darwin.!openbsd::
    "gid_0" string => "fixme";

  SuSE|redhat::
    "num_daemon" int => "2";
  (linux.!SuSE.!redhat)|freebsd|darwin|openbsd::
    "num_daemon" int => "1";
  solaris::
    "num_daemon" int => "12";
  !linux.!freebsd.!solaris.!darwin.!openbsd::
    "num_daemon" string => "fixme";

  linux|freebsd|solaris|openbsd::
    "num_sys" int => "3";
  !linux.!freebsd.!solaris.!darwin.!openbsd::
    "num_sys" string => "fixme";
}

#######################################################

bundle agent check
{
classes:
    darwin::
        "ok_sys" expression => "any";
    !darwin::
        "ok_sys" expression => strcmp("$(test.gid_sys)", "$(test.num_sys)");

    any::
        "ok" and => {
                    strcmp("$(test.gid_0)", "0"),
                    strcmp("$(test.gid_daemon)", "$(test.num_daemon)"),
                    "ok_sys"
                    };

reports:
    DEBUG::
        "root/wheel is GID $(test.gid_0), expected 0";
        "daemon is GID $(test.gid_daemon), expected $(test.num_daemon)";
        "sys is GID $(test.gid_sys), expected $(test.num_sys)";
    ok::
        "$(this.promise_filename) Pass";
    !ok::
        "$(this.promise_filename) FAIL";
}

