#######################################################
#
# Test readjsonstring()
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };   
      version => "1.0";
    nova_edition::
      host_licenses_paid => "5";
}

bundle common g
{
  vars:
      "data1" string => "{\"x\":1}";
      "path1" string => "[\"x\"]";
      "json1" string => "1";

      "data2" string => "[2]";
      "path2" string => "[0]";
      "json2" string => "2";

      "data3" string => "{\"x\":[3]}";
      "path3" string => "[\"x\", 0]";
      "json3" string => "3";

      "data4" string => "{\"x\":{\"y\":4}}";
      "path4" string => "[\"x\",\"y\"]";
      "json4" string => "4";
}

#######################################################

bundle agent init
{
  vars:
      "dummy" string => "dummy";
}

#######################################################

bundle agent test
{
  vars:
      "json1" string => readjsonstring("$(g.data1)", "$(g.path1)", 100);
      "json2" string => readjsonstring("$(g.data2)", "$(g.path2)", 100);
      "json3" string => readjsonstring("$(g.data3)", "$(g.path3)", 100);
      "json4" string => readjsonstring("$(g.data4)", "$(g.path4)", 100);
}

#######################################################

bundle agent check
{
  classes:
      "ok1" expression => strcmp("$(test.json1)", "$(g.json1)");
      "ok2" expression => strcmp("$(test.json2)", "$(g.json2)");
      "ok3" expression => strcmp("$(test.json3)", "$(g.json3)");
      "ok4" expression => strcmp("$(test.json4)", "$(g.json4)");

      "ok" and => { "ok1", "ok2", "ok3", "ok4" };

  reports:
    DEBUG::
      "JSON value1 from $(g.data1) at $(g.path1) is $(test.json1)";
      "JSON value2 from $(g.data2) at $(g.path2) is $(test.json2)";
      "JSON value3 from $(g.data3) at $(g.path3) is $(test.json3)";
      "JSON value4 from $(g.data4) at $(g.path4) is $(test.json4)";
    ok::
      "$(this.promise_filename) Pass";

    !ok::
      "$(this.promise_filename) FAIL";
}

#######################################################

bundle agent fini
{
  vars:
      "dummy" string => "dummy";
}
