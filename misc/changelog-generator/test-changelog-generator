#!/bin/sh

################################################################################
# Test that the changelog-generator produces the expected output.
################################################################################

set -e

rm -rf /tmp/test-changelog-generator.$$
mkdir -p /tmp/test-changelog-generator.$$

SRC_DIR="$(pwd)"
cd /tmp/test-changelog-generator.$$
git init
echo dummy > dummy
git add dummy
git commit -m 'Dummy commit'

# The numbers that are sprinkled about below are just to make it easier to
# pinpoint where a particular line came from.

################################################################################

git commit --allow-empty -m 'Fix for changelog N1

Changelog: Title'

################################################################################

git commit --allow-empty -m 'Fix not for changelog N2

Not for changelog N3'

################################################################################

git commit --allow-empty -m 'Complete Fix for changelog N4

Should be included N5

Changelog: Commit'

################################################################################

git commit --allow-empty -m 'Message not for changelog N6

Not for changelog N7

Changelog: This should be in changelog N8
And this N9

But not this N10'

################################################################################

git commit --allow-empty -m 'Canceled fix for changelog N11

Not for changelog N12

Changelog: Commit'
git commit --allow-empty -m 'Disable changelog N13

Not for changelog N14

Cancel-Changelog: '`git rev-parse HEAD`

################################################################################

git commit --allow-empty -m 'Another canceled fix for changelog N15

Not for changelog N16

Changelog: Canceled entry should not be in changelog N17
(cherry picked from commit 3714b61bc4a139c8f58554052775699816e47b62)'
git commit --allow-empty -m 'Disable changelog N18

Not for changelog N19

Cancel-Changelog: 3714b61bc4a139c8f58554052775699816e47b62'

################################################################################

git commit --allow-empty -m 'Reverted fix for changelog N20

Not for changelog N21

Changelog: Commit'
git commit --allow-empty -m 'Disable changelog N22

Not for changelog N23

This reverts commit '`git rev-parse HEAD`'.'

################################################################################

git commit --allow-empty -m 'Another Reverted fix for changelog N24

Not for changelog N25

Changelog: Reverted entry should not be in changelog N26
(cherry picked from commit 13cf5bea954b2d55c2bb235f61316bb57b7d4189)'
git commit --allow-empty -m 'Disable changelog N27

Not for changelog N28

Changelog: Should be in changelog though. N29
This reverts commit 13cf5bea954b2d55c2bb235f61316bb57b7d4189.'

################################################################################

git commit --allow-empty -m 'Several entries for changelog N30

Should be included N31

Changelog: Commit
Changelog: Should also be included, but separately and not twice. N32

Changelog: This too. N33
Changelog: As well as this. N34

And finally this, part of the commit message. N35'

################################################################################

git commit --allow-empty -m 'Jira entry N36

MEN-645 Should be included N37

Changelog: Commit'

################################################################################

git commit --allow-empty -m 'MEN-76: Jira entry in title N38

Changelog: Title'

################################################################################

git commit --allow-empty -m 'MEN-123 Several Jira entries N39

Changelog: Should be there N40

Men-1234'

################################################################################

git commit --allow-empty -m 'Jira entries in parentheses (title) N41

Changelog: Title

Stuff. (Jira MEN-1234) (MEN-2345) N42'

################################################################################

git commit --allow-empty -m 'Jira entries inline (title) N43

Changelog: Title

Stuff Jira MEN-2345 N44'

################################################################################

git commit --allow-empty -m 'Jira entries in parentheses (commit) N45

Changelog: Commit

Stuff. (Jira MEN-4321) (MEN-54321) N46'

################################################################################

git commit --allow-empty -m 'Jira entries inline (commit) N47

Changelog: Commit

Stuff MEN-2345 N48'

################################################################################

git commit --allow-empty -m 'Jira MEN-1234: Jira twice (commit) N49

Changelog: Commit

More stuff. (Jira: MEN-2345) N50'

################################################################################

git commit --allow-empty -m 'MEN-1234: Jira duplicate (commit) N51

Changelog: Commit

More stuff. (MEN-1234) N52'

################################################################################

git commit --allow-empty -m 'Changelog commit with trailing dot. N53

Changelog: Commit.'

################################################################################

git commit --allow-empty -m 'Changelog title with trailing dot. N54

Changelog: Title.'

################################################################################

git commit --allow-empty -m 'Jira MEN-1111: Changelog with Jira. N55

jira archive-2
men-9
https://tracker.mender.io/browse/men-1

Changelog: commit'

################################################################################

git commit --allow-empty -m 'Jira MEN-1111: Changelog with Jira tracker. N56

jira archive-2
men-9
https://tracker.mender.io/browse/men-1

Changelog: commit'

################################################################################

git commit --allow-empty -m 'Jira MEN-1111: Changelog with many Jira refs. N57

Ref: jira: archive-2
Ref: men-9
Ref: https://tracker.mender.io/browse/men-1
Ref: MEN-12345

Changelog: commit'

################################################################################

git commit --allow-empty -m 'Changelog with inline Jira refs. N58a

Changelog: Some inline jira men-80 reference. N58b
Changelog: Some other archive-7777 reference. N59
Changelog: Some inline (jira men-81) reference. N60
Changelog: Some other (men-7778) reference. N61
Changelog: commit'

################################################################################

git commit --allow-empty -m 'Changelog with suspicious number in it. N62

1234

Changelog: commit'

################################################################################

git commit --allow-empty -m 'Changelog with suspicious number outside of it. N63

2345

Changelog: title'

################################################################################

git commit --allow-empty -m 'Changelog with signed-off N64

Commit message
Signed-off-by: Hacker
Changelog: commit'

################################################################################

git commit --allow-empty -m 'Changelog with invalid signed-off N65

Commit message
Mention "Signed-off-by: " mid sentence
Changelog: commit'

################################################################################

# A bit tricky to make this commit, because normal git-commit cleans up \r.
# But it *is* in our Git history (1f900885d2aebda3e23ca5129d37f5e75eb83ee4)
TREE=$(git cat-file commit HEAD | grep '^tree ' | sed -e 's/^tree //')
git reset --hard $(git commit-tree -p $(git rev-parse HEAD) $TREE <<EOF)
Changelog with Windows line endings N66

Changelog: title

stuff stuff
EOF

################################################################################

# We just generate an invalid GPG signature (it is from a random commit in core
# and won't be valid, but that doesn't matter).
TREE=$(git cat-file commit HEAD | grep '^tree ' | sed -e 's/^tree //')
git reset --hard $(git hash-object -w -t commit --stdin <<EOF)
tree $TREE
parent $(git rev-parse HEAD)
author whatever <whatever@whatever.com> 1461929235 -0400
committer whatever <whatever@whatever.com> 1461929235 -0400
gpgsig -----BEGIN PGP SIGNATURE-----
 Version: GnuPG v1
 
 iQIcBAABAgAGBQJXI0UTAAoJEBHyPQpOS53uB9MP/06LBhE/i7BL37EANEMoUUM2
 gZwSiJ4HYF6lwNBBHNz/KYkUdh2B16m8mM1l9uePlMfhuA/xVlwP18shLaKDxdMA
 zqt3+x6nPMHyx/WrPgOt+4hCyp+AYX/VQ0SaJGGKoOY9MJ9uOichu8iEfrNU333M
 ePVKWRSA1p2+sxoq+oX63kx/x9/BK59GVKKF1/bsiAXjfNKfkmDLe4T4/0bpZYg1
 fDPXhUsHn2flF6sK3P/1hkgi/gJhsWRLZUqcj9HS3IwGSUGRIx5xzGvanD9nAnwg
 eeFRAQ6UbNN032yjKr2cs9HoJuHTwpk1t6bDX/Ti17rrDtvSKFLBxMOFGJFl09/k
 Ltmul9+KUbWZMVymtbWekgVA05FEBqpaJpZ89NvFM9vrl+lfn4AN84e1B/6M8jWI
 VSS/C4jyAlKl7YWqBbzSh/ES+JBX3JwRO+KYCBYOE97TRZtgeFeNzF8HaRO4Ndnp
 7uJmeMhXLpBwXU0vUmoCRSJGEacnCZqDdrCE2XoUjzl1DKrdJT6RDXkgwZa8Hu3A
 lEIXmIUMLTtbVSDOo+Ls5npaptlDOlG8cvCZFEcbKtjTfHcnpi8Kx+qNyGxuc79i
 oGDhfxWFpCJK+TsrXZHoU6/d0ROmGynxYXWutlStreGQjMucML5vOXkKI5OHflVN
 ioeZTiztfyD5AwfmioMb
 =k68w
 -----END PGP SIGNATURE-----

Changelog with GPG entry N67

Changelog: Commit
EOF

################################################################################

git commit --allow-empty -m 'MEN-1234 has no JIRA string in front.

Changelog: Make sure the bugtracker reference is taken from the title
           and goes after this message. The title should not be
           included. N68'

################################################################################

git commit --allow-empty -m 'MEN-1234 with JIRA tag in title. N68

Title should be included, rest of commit - not'

################################################################################

git commit --allow-empty -m 'MEN-1234 with JIRA tag in title. N69

Changelog: None

Nothing should be included'

################################################################################



"$SRC_DIR/changelog-generator" --repo --sort-changelog HEAD > result.txt 2>stderr.txt || {
    echo "Script failed with $?"
    echo "--------"
    echo "result.txt:"
    cat result.txt
    echo "--------"
    echo "stderr.txt:"
    cat stderr.txt
    exit 1
}
cat > expected.txt <<EOF
	- As well as this. N34
	- Changelog commit with trailing dot. N53
	- Changelog title with trailing dot. N54
	- Changelog with GPG entry N67
	- Changelog with Jira tracker. N56 (ARCHIVE-2, MEN-1, MEN-1111, MEN-9)
	- Changelog with Jira. N55 (ARCHIVE-2, MEN-1, MEN-1111, MEN-9)
	- Changelog with Windows line endings N66
	- Changelog with inline Jira refs. N58a
	  (ARCHIVE-7777, MEN-7778, MEN-80, MEN-81)
	- Changelog with invalid signed-off N65
	  Commit message
	  Mention "Signed-off-by: " mid sentence
	- Changelog with many Jira refs. N57
	  (ARCHIVE-2, MEN-1, MEN-1111, MEN-12345, MEN-9)
	- Changelog with signed-off N64
	  Commit message
	- Changelog with suspicious number in it. N62
	  1234
	- Changelog with suspicious number outside of it. N63
	- Complete Fix for changelog N4
	  Should be included N5
	- Fix for changelog N1
	- Jira duplicate (commit) N51
	  More stuff. N52 (MEN-1234)
	- Jira entries in parentheses (commit) N45
	  Stuff. N46 (MEN-4321, MEN-54321)
	- Jira entries in parentheses (title) N41 (MEN-1234, MEN-2345)
	- Jira entries inline (commit) N47
	  Stuff N48 (MEN-2345)
	- Jira entries inline (title) N43 (MEN-2345)
	- Jira entry N36
	  Should be included N37 (MEN-645)
	- Jira entry in title N38 (MEN-76)
	- Jira twice (commit) N49
	  More stuff. N50 (MEN-1234, MEN-2345)
	- Make sure the bugtracker reference is taken from the title
	             and goes after this message. The title should not be
	             included. N68 (MEN-1234)
	- Several entries for changelog N30
	  Should be included N31
	  And finally this, part of the commit message. N35
	- Should also be included, but separately and not twice. N32
	- Should be in changelog though. N29
	- Should be there N40 (MEN-123, MEN-1234)
	- Some inline reference. N58b (ARCHIVE-7777, MEN-7778, MEN-80, MEN-81)
	- Some inline reference. N60 (ARCHIVE-7777, MEN-7778, MEN-80, MEN-81)
	- Some other reference. N59 (ARCHIVE-7777, MEN-7778, MEN-80, MEN-81)
	- Some other reference. N61 (ARCHIVE-7777, MEN-7778, MEN-80, MEN-81)
	- This should be in changelog N8
	  And this N9
	- This too. N33
	- with JIRA tag in title. N68 (MEN-1234)
EOF
diff -u expected.txt result.txt

# This line should be there, but no others (note the -v and the inverted error condition).
if egrep -v '\*\*\* Commit [0-9a-f]{40} had a number 1234 which may be a ticket reference we missed\. Should be manually checked\.' stderr.txt
then
    echo 'Unexpected error message in:'
    cat stderr.txt
    exit 1
fi

################################################################################

rm -rf /tmp/test-changelog-generator.$$

echo PASS
