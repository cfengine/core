######################################################
#
#  Basic test of promise module using the shell library
#
#####################################################
body common control
{
    inputs => { "../default.cf.sub" };
    bundlesequence  => { default("$(this.promise_filename)") };
    version => "1.0";
}

#######################################################

bundle agent init
{
  vars:
    "test_string"
      string => "hello, modules";

   files:
    "$(G.testfile).src"
      create => "true",
      edit_line => insert_lines("$(test_string)");

    "$(G.testfile).dst"
      delete => init_delete;

    "$(this.promise_dirname)/cfengine.sh"
      copy_from => local_cp("$(this.promise_dirname)/../../../misc/custom_promise_types/cfengine.sh");

}

body delete init_delete
{
      dirlinks => "delete";
      rmdirs   => "true";
}

#######################################################

promise agent cp
{
    interpreter => "/bin/bash";
    path => "$(this.promise_dirname)/cp.sh";
}

bundle agent test
{
  meta:
    "description" -> { "CFE-3575" }
      string => "Test a simple promise module which uses library";

  cp:
    "$(G.testfile).dst"
      from => "$(G.testfile).src";
}

#######################################################

bundle agent check
{
  classes:
      "ok"
        expression => strcmp("$(init.test_string)", readfile("$(G.testfile).dst")),
        if => fileexists("$(G.testfile).dst");

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
