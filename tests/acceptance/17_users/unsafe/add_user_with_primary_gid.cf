#######################################################
#
# Test adding a user with a primary gid.
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub",
                  "user_queries.cf.sub",
                  "disable_sudo_tty_requirement.cf.sub"
                };
      bundlesequence  => { default("$(this.promise_filename)") };
}

#######################################################

bundle agent init
{
  # Remove him first, should he already be present.
  users:
    "johndoe"
      policy => "absent";

  files:
    "$(G.testfile)"
      delete => init_delete;

  methods:
      "any" usebundle => disable_sudo_tty_requirement;
}

body delete init_delete
{
  rmdirs => "false";
}

#######################################################

body contain test_contain_body
{
  useshell => "useshell";
}

bundle agent test
{
  users:
    "johndoe"
      policy => "present",
      group_primary => "$(user_tests.gid1)";

  commands:
    !windows::
      "sudo -u johndoe $(G.touch) $(G.testfile)"
        contain => test_contain_body;
}

#######################################################

body perms check_perms_body
{
  groups => { "$(user_tests.gid1)" };
}

body classes check_classes_body
{
  promise_repaired => { "not_ok" };
  promise_kept => { "ok" };
}

bundle agent check
{
  methods:
      "any" usebundle => remove_stale_groups;

  files:
    "$(G.testfile)"
      perms => check_perms_body,
      classes => check_classes_body;

  reports:
    (ok.!not_ok)|windows::
      "$(this.promise_filename) Pass";
    (!ok|not_ok).!windows::
      "$(this.promise_filename) FAIL";
}
