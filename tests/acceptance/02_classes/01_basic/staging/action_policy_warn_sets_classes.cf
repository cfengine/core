#######################################################
#
# Test not
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
  vars:
      "dummy" string => "dummy";
}

bundle agent test 
{
  files:
      "${G.testfile}"
      create  => 'true',
      classes =>  ifelse( "test_files" ),
      action  => warnonly;

  commands:
      "${G.echo} test_warning_only"
      classes =>  ifelse( "test_commands" ),
      action  => warnonly;

  processes:
      "cf-agent"
      restart_class => "restart_cf_agent",
      comment       => "restart_cf_agent should not be set because warnonly",
      classes       => ifelse( "test_processes" ),
      action        => warnonly;

  reports:
      "reports test"
      classes =>  ifelse( "test_reports" ),
      action  => warnonly;
}

bundle agent check
{
  vars:
      "classes" slist => classesmatching( "test_.*" );

  classes:
      "ok" and => {
		    "test_files_notkept",
		    "test_commands_notkept",
		    "test_processes_notkept",
		    "test_reports_notkept"
      };

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";

    debug::
      "${classes}";

}
body action warnonly
{
      action_policy => "warn";
}
body classes ifelse (string) 
{
      promise_kept     => { "${string}_kept" };
      promise_repaired => { "${string}_repaired" };
      repair_failed    => { "${string}_notkept" };
      repair_denied    => { "${string}_notkept" };
      repair_timeout   => { "${string}_notkept" };
}
