language: c

addons:
  artifacts:
    paths:
      - artifacts/

env:
  global:
    - CI_NODE_TOTAL=6
      # Quickest to build, fast performing, debugable builds.
    - CFLAGS="-g1 -O1"
      # upload log files, tarballs etc artifacts from the build.
    - ARTIFACTS_BUCKET=cfengine-travis-artifacts
      # 2 cores according to: https://docs.travis-ci.com/user/ci-environment/
    - MAKEFLAGS=-j3

# Parallel jobs listed here; fastest jobs should come first to give
# feedback ASAP. For more info read this:
# https://docs.travis-ci.com/user/multi-os/
matrix:
  fast_finish: true # Build will succeed once all linux jobs succeed
  include:
    - os: linux
      sudo: required
      env: JOB_TYPE=compile_and_unit_test
    - os: linux
      sudo: required
      env: JOB_TYPE=acceptance_tests_common
      # The unsafe acceptance tests don't work with SIMFS which is the default
      # filesystem in Travis; so change OS to Trusty, which uses ext4.
    - os: linux
      sudo: required
      env: JOB_TYPE=acceptance_tests_unsafe_serial_network_etc
    - os: osx
      env: JOB_TYPE=compile_only
      sudo: false
  allow_failures:
    - os: osx
      env: JOB_TYPE=compile_only
      sudo: false

before_install:
  - set -e
  - chmod ug+x ./travis-scripts/*
  - source ./travis-scripts/before_install.sh

script:
  - set -e
  - source ./travis-scripts/script.sh

before_deploy:
  - set +e
  - source ./travis-scripts/before_deploy.sh

# We deploy when setting tags only, which basically never happens
# on master branch. Cherry-pick this part and alter it properly into
# the release branches.
deploy:
  skip_cleanup: true
  provider: releases
  # Remember to set it as private variable in Travis-CI settings
  api_key: $GITHUB_RELEASE_TOKEN
  # Does not work, I get the error that "true" is not a boolean
  prerelease: $IS_PRERELEASE
  file: "$DIST_TARBALL"
  on:
    tags: true
    # Avoid upload from all the multiple parallel matrix jobs
    condition: "$CF_VERSION = latest"

after_script:
  - set +e
  - source ./travis-scripts/after_script.sh
