\input texinfo-altfont
\input texinfo-logo
\input texinfo
@selectaltfont{cmbright}
@setlogo{CFEngineFrontPage}

@c *********************************************************************
@c
@c  This is a TEXINFO file. It generates both TEX documentation and
@c  the "on line" documentation "info" files.
@c
@c  The file is structured like a programming language. Each chapter
@c  starts with a chapter comment.
@c
@c  Menus list the subsections so that an online info-reader can parse
@c  the file hierarchically.
@c
@c ***********************************************************************
@c %** start of header
@setfilename getstarted.info
@settitle Get started with CFEngine
@setchapternewpage odd
@c %** end of header

@titlepage
@title Get started with CFEngine
@subtitle A CFEngine Handbook
@author CFEngine AS


@page

@cartouche
@quotation
This short guide explains how to install the software from binary packages and get it running. This procedure is the same for both CFE Community and CFE Nova since the launch CFE Community version 3.2 and CFE Nova version 2.1.
@end quotation
@end cartouche

@vskip 0pt plus 1filll
Copyright @copyright{} 2011- CFEngine AS

@end titlepage


@c *************************** File begins here ************************


@ifinfo
@dircategory CFEngine Training
@direntry
* CFEngine Modularization:
                      CFEngine is a language based tool specifically
                      designed for configuring and maintaining
                      Unix-like operating systems attached
                      to a TCP/IP network.
@end direntry
@end ifinfo

@ifnottex
@menu
@end menu

@node
@top CFEngine-Tutorial
@end ifnottex
@iftex
@contents
@end iftex

@ifhtml
@html
<a href="#Contents"><h1>COMPLETE TABLE OF CONTENTS</h1></a>
<h2>Summary of contents</h2>
@end html
@end ifhtml

@node
@chapter Getting Started with CFEngine

@node 
@section What does getting started entail?

@sp 1

@i{Choosing your hub.
Assumptions about your operating system (working package manager)
Start with no initial CFEngine policies.}


@c *****************************************************
@c * CHAPTER
@c *****************************************************

@node 
@section Installing CFEngine


@menu
* Installing the software::     
* Upgrading::              
* What is the default configuration - out of the box::  
@end menu

CFEngine is designed to be simple to install in its default configuration. The installation
process has three phases:

@itemize
@item Unpacking the software.
@item Obtaining a license (only for commercial editions).
@item Adapting policy.
@end itemize

@node 
@section Installing the software on a new host
@c @node Installing from software binaries, Upgrading, Installing CFEngine, Installing CFEngine
@c @section Installing the software on a new host

You should start from a blank system. If you wish to install CFE Nova and you have
already developed a policy using CFE Community, set aside this policy during the installation process. You will be able
to integrate it back later.

In the following, @file{<edition>} represents either @file{community} or @file{nova}, depending on whether you are installing CFE Community or CFE Nova.

CFEngine is provided in two packages, @file{cfengine-<edition>} and @file{cfengine-<edition>-expansion}. The main software package 
(for each operating system) must be installed on every host. The second package (expansion) is only installed on 
the @i{hub} or @i{policy server}. @b{You should install and set up the hub first}.

The @file{cfengine-<edition>} package may be installed on a wide range of supported operating systems, including
Linux, Solaris, Windows, etc. The @file{cfengine-<edition>-expansion}
package currently only supports the following Linux operating systems:
@example
Debian
Ubuntu
Red Hat
SuSE
@end example
@noindent This means you must have one Linux computer running as your hub.
No special software is required on other machines in your
network. CFEngine bundles all dependencies in the binary package.

On a new host, installation follows the following procedure. References to package managers
assume that additional packages might need to be installed on the policy server, e.g. the Apache
Web Server, MySQL database, etc. Remember, root privilege is required for the installation.

@enumerate
@item Verify that the machine's network connection is working and that it can resolve
names. On the hub, verify that package managers @code{yum},
@code{zypper} or @code{apt-get} are working (for example by typing @code(apt-get update)). They will be used to
install a web, database and php server (if not already
installed). If you are not able to set up a package manager and
repository on the hub, please look in the Frequently Asked Questions
below for manual installation.

@item Copy the binary packages to the system. On the hub or policy server:

@noindent CFE Community
@example
cfengine-community-3.@var{xxx.[rpm|deb]}
cfengine-community-expansion-3.@var{xxx.[rpm|deb]}
@end example

@noindent CFE Nova
@example
cfengine-nova-2.@var{xxx.[rpm|deb]}
cfengine-nova-expansion-2.@var{xxx.[rpm|deb]}
@end example

@sp 1

@noindent On all other machines:

@noindent CFE Community
@example
cfengine-community-3.@var{xxx.[rpm|deb]}
@end example
@noindent CFE Nova
@example
cfengine-nova-2.@var{xxx.[rpm|deb]}
@end example

@item Unpack the software:
@table @i
@item Red Hat family
@example
host# rpm -ihv @var{packages}
@end example

@item SUSE family
@example
host# rpm -ihv @var{packages}
@end example

@item Debian family
@example
host# dpkg --install  @var{packages}
@end example

@end table 

@item On the hub, a public key has now been created in @file{/var/cfengine/ppkeys/localhost.pub} as part of the
package installation. Users of CFE Community may skip to the next step. CFE Nova users: you should send this public key to CFEngine Support as an attachment in the ticket system (@url{https://cfengine.com/otrs/customer.pl}), 
to obtain a license file @file{license.dat}. *** Save the returned license file to @file{/var/cfengine/masterfiles/license.dat} 
on the hub @b{before continuing} ***. See more details for the software licensing here; 
@url{https://cfengine.com/software/Licensing.pdf}

@item The remaining steps apply to all hosts, but you should @b{install the hub or policy server first}.
Find the hostname or IP address of the hub (policy server), here we assume @samp{123.456.789.123} is the address.
@verbatim
 hub # /var/cfengine/bin/cf-agent --bootstrap 123.456.789.123
@end verbatim
Use the same command on all hosts, i.e. *** do not bootstrap the policy server with a localhost address *** 
If you mistype the address of the hub, we recommend doing the following steps to re-boostrap.
@verbatim
 hub # /var/cfengine/bin/cf-agent --bootstrap 123.456.789.124
 hub # killall cf-execd cf-serverd cf-monoitord cf-hub
 hub # rm -rf /var/cfengine/inputs/*
 hub # rm -f /var/cfengine/policy_server.dat
 hub # /var/cfengine/bin/cf-agent --bootstrap 123.456.789.123
@end verbatim

@item The software should now be running.

@end enumerate

@noindent @b{How to assess success in this procedure (CFE Community and CFE Nova):}

@enumerate

@item Look at the process list on the systems with @samp{ps waux | grep cf}.
You should be able to see @code{cf-execd} running, and eventually other processes from 
the CFEngine suite like @code{cf-monitord} @code{cf-serverd}. For CFE Nova, you should 
also eventually see @code{cf-hub} running on the hub. Note that it may take 5--10 minutes before all the
processes get started.

@item Look for files in @file{/var/cfengine/inputs} (Unix)
or @file{C:\Program Files\Cfengine\inputs} (Windows). For CFE Nova users the license
file will be copied out from the policy server to the clients as part
of the normal distribution of policy. Each Unix machine should get a
copy of the @file{license.dat} file in @file{/var/cfengine/inputs}
(Unix) or @file{C:\Program Files\Cfengine\inputs} (Windows).
@end enumerate

@noindent @b{How to assess success in this procedure (CFE Nova only):}

@enumerate 3
@item On the hub, the file @file{/var/cfengine/promise_knowledge.cf} should have been
created, and should contain data.

@item  Finally, try to connect to the web server at port 80 on the hub / policy host.
You should see a summary page like the one shown in the figure
below. There should be at least 1 host registered, since the hub will
pull reports from itself also.
@end enumerate

@sp 1
@center @image{summary,15cm,,The front page}
@center The opening page of the CFEngine Nova Mission Portal.
@sp 1


@node 
@section What is the default configuration?

Following the above procedure, you should have a fully functional
CFEngine on all clients. However, in the default configuration,
CFEngine does nothing other than looking after itself, and looking for
possible policy updates from @file{/var/cfengine/masterfiles}
on the policy server. On CFE Nova, the policy server is configured to collect data
from non-policy server machines and generate reports that are
integrated into the knowledge base.

To alter policies, you need to change the files on the policy hub,
in the directory @file{/var/cfengine/masterfiles}. To begin with
most of the policy examples are commented out in these files:
@sp 1
@cartouche
@smallexample
cdp_inputs/  cfengine.cf         failsafe.cf     knowledge.cf  @b{promises.cf}   update.cf
cdp_lib/     cfengine_stdlib.cf  file_change.cf  OrionCloud/
@end smallexample
@end cartouche
@sp 1
To change this, you can go to the main file @file{promises.cf}, and include additional
pre-made bundles of promises. You should always verify the contents of the bundles
you include before activating and deploying to new machines.

@i{Remark: this section will and below have to be modified according to what is included in the PolicyBase. Will the update procedure also be included in Community 3.2?}


@cartouche
@verbatim
bundle agent main
{
methods:

  any::

   "general" usebundle => def;

#   "jobs" usebundle => system_scheduling;
#   "security" usebundle => change_management;
#   "security" usebundle => security_files;
#   "windows boxes" usebundle => active_directory;

#  windows::
#   "windows boxes" usebundle => software_local;
#   "windows boxes" usebundle => app_baseline;
#   "windows boxes" usebundle => win_services;
#   "windows boxes" usebundle => win_registry;
#   "windows boxes" usebundle => win_emergency;

#  !windows::
#   "security"    usebundle => system_xinetd;
#   "maintenance" usebundle => garbage_collection;
}
@end verbatim
@end cartouche

@node 
@section Frequently Asked Questions

@node
@subsection How do I install the prerequisites for the hub manually?

Here is a list of dependencies for the hub to be checked if The Mission Portal displays
nothing;
@itemize
@item Red Hat/CentOS/Fedora
@example
httpd, mysql, mysql-server, php, php-bcmath, subversion 
@end example
@item SUSE
@example
apache2, apache2-mod_php5, apache2-prefork, mysql, php5, subversion
@end example
@item Debian/Ubuntu
@example
apache2, mysql-server, php5
@end example
@end itemize

To install all of these, you might want to use @code{yum} on Red Hat/CentOS/Fedora, 
@code{zypper} on SUSE or @code{apt} on Debian/Ubuntu.

@subsection Why do I get a promise failed with the message @code{Can't stat
/var/cfengine/master_software_updates/SOME-OS} on some hosts?

There is a built-in promise to automatically upgrade the Nova
binaries. By default, the clients will check for an update package
every time Nova runs. So if the clients find that there is no source
directory to download the files from, the message will be displayed.

To fix the problem, simply create an empty directory mentioned in the
message on the hub.
@verbatim
 hub # mkdir /var/cfengine/master_software_updates/SOME-OS
@end verbatim


@subsection I did bootstrap the hub @emph{before} obtaining a license file, what should I do?

Four steps need to be followed to correct this minor issue.
@enumerate
@item obtain a working license file and copy it to @file{/var/cfengine/masterfiles}
@verbatim
 hub # cp /tmp/license.dat /var/cfengine/masterfiles
@end verbatim
@item killall Nova running processes
@verbatim
 hub # killall cf-execd cf-serverd cf-monitord cf-hub
@end verbatim
@item wipe out @file{/var/cfengine/inputs }
@verbatim
 hub # rm -rf /var/cfengine/inputs
@end verbatim
@item bootstrap the policy hub
@verbatim
 hub # /var/cfengine/bin/cf-agent --bootstrap 123.456.789.123
@end verbatim
@end enumerate


@subsection On my hub, I get messages of connection failures to a database. For example, in @code{messages}, I can see something like @code{!! Could not open connection to report database for saving}. What should I do?

This message comes from the @code{cf-hub} process. It is responsible
for pulling reports from hosts that have contacted the hub to get
policy updates. When these reports are fetched, they are stored in a
local MongoDB database on the hub, and connecting to this database is
what is failing. 

Probably, the issue is that the database server is not running on your
hub. Run the @code{ps}-command to check this.
@verbatim
 hub # ps -e | grep mongod
 hub #
@end verbatim

If the @code{mongod} process @emph{is} running, it must be
misconfigured or in some bad state. Please look at the newest entry in
@file{/var/log/mongod.log} to diagnose the problem, and contact
CFEngine Technical Support if necessary.

If the @code{mongod} process @emph{is not} running, please follow the
steps below.
@itemize
@item Run 
  hub # @code{/var/cfengine/bin/cf-twin -Kvf failsafe.cf > /tmp/cfout}
@item Check again if the @code{mongod} is running, if so, the problem
is probably fixed now.
@item If @code{mongod} is still not running, please search the output
file for lines starting as follows.

@verbatim
...
nova>  -> Making a one-time restart promise for mongod
...
...
nova>  -> Executing '/var/cfengine/bin/mongod....
nova>  -> Backgrounding job /var/cfengine/bin/mongod...
nova>  -> Completed execution of /var/cfengine/bin/mongod...
...
@end verbatim

If you don't see the first line above, Nova does not try to start
@code{mongod} --- so check if you bootstrapped your hub correctly. If
you see all lines, Nova starts @code{mongod}, but the process just
terminates immideatley after. If so, continue to the next step.

@item Look at the newest entry in @file{/var/log/mongod.log}. It
should give you more details of why the @code{mongod} process refuses
to start. The two most common scenarios are described next.

@item If @code{mongod} has been terminated unexpectedly, it might have
left a lock-file behind that stops it from starting again. Try
deleteting @file{/var/cfengine/state/mongod.lock} if it exists.

@item If the database is corrupted, you can have @file{mongod} create a new one my moving
@file{/var/cfengine/state/cf-report.*} out of the way. There are also
tools and documentation for repairing a database at
@url{http://www.mongodb.org/}.

Note that almost all of the @code{cfreport} database is completely
recreated with data collected from clients every six hours, so
deleting it is normally acceptable. But CFEngine AS or CFEngine Inc
can not be held responsible for data loss in this respect.


@end itemize

@subsection How do I upgrade from community version to Nova?

There is no shortcut for this task. We urge you to set aside your
current community policy while you install Nova, setup the Nova hub by
following this/Nova supplement document, and then integrate your existing
policy to the hub manually, in small testable steps.

CFEngine Nova is compatible with the Community Edition of CFEngine 3, but
some process files are now managed by CFEngine for user convenience.

@subsection Let's say I'd like to deploy Nova on my Debian/Ubuntu network. Describe this step by step?

Here we go:

@b{Debian/Ubuntu Installation Example:}
@itemize
@item @b{Hub(policy-server)}
@enumerate
@item Verify that the package manager is working (eg. @code{apt-get update})
@item Download the Nova and Nova Supplement package
@item Unpack the software:
@verbatim
 hub # dpkg --install cfengine-nova_2.0.1-1_x86_64.deb 
 hub # dpkg --install cfengine-nova-expansion_2.0.1-1_x86_64.deb
@end verbatim
@item Send the file: @code{"/var/cfengine/ppkeys/localhost.pub"} to Cfengine Support (OTRS ticket system)
@item You will receive a license file: @code{license.dat}
@item Copy the license file to: @code{"/var/cfengine/masterfiles/license.dat"}
@item Bootstrap the hub:
@verbatim
 hub # /var/cfengine/bin/cf-agent --bootstrap <ip address of the hub>
  *** Warning: do not use 127.0.0.1 as the ip address ***
@end verbatim
@end enumerate
@item @b{Clients}
@enumerate
@item Verify that the package manager is working (eg. @code{apt-get update})
@item Download the Nova package
@item Unpack the software:
@verbatim
 hub # dpkg --install cfengine-nova_2.0.1-1_x86_64.deb
@end verbatim
@item Bootstrap the Client to the hub:
@verbatim
 client # /var/cfengine/bin/cf-agent --bootstrap <ip address of the hub>
@end verbatim
@end enumerate
@end itemize

To check if the installation went as expected, see @code{"How to assess success in this procedure"} section in the Nova_Supplement Guide.

@bye
