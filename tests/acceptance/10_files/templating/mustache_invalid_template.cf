#######################################################
#
# Test that invalid mustache template does not cause a segfault 
# Redmine:4702 (https://cfengine.com/dev/issues/4702)
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";

}

#######################################################

bundle agent init
{
  vars:
      "template_content" string => '
{{#vars.sys.interfaces}}{{.}} {{#vars.sys.interface_flags[{{.}}]}} {{/vars.sys.interfaces}}';

  files:
      "$(G.testfile).template"
        create => "true",
        edit_line => insert_lines($(template_content)),
        edit_defaults => empty;

      "$(G.testfile).output"
        delete => init_delete;
}

body delete init_delete
{
      dirlinks => "delete";
      rmdirs   => "true";
}

body edit_defaults empty
# @brief Empty the file before editing
#
# No backup is made
{
      empty_file_before_editing => "true";
      edit_backup => "false";
      #max_file_size => "300000";
}

bundle edit_line insert_lines(lines)
# @brief Append `lines` if they don't exist in the file
# @param lines The lines to be appended
#
# **See also:** [`insert_lines`][insert_lines] in
# [`edit_line`][bundle edit_line]
{
  insert_lines:

      "$(lines)"
      comment => "Append lines if they don't exist";
}
#######################################################

bundle agent test
{
  vars:
    "template_file" string => "$(G.testfile).template";

  files:
      "$(G.testfile).output"
        create => "true",
        edit_template => "$(template_file)",
        template_method => "mustache";

  reports:
    DEBUG::
      "Rendering template file $(template_file) to $(G.testfile).output";
}


#######################################################

bundle agent check
{
  classes:
      "ok" expression => "any",
        comment => "If we made it to here we didnt segfault";

  reports:
    ok::
      "$(this.promise_filename) Pass";
    !ok::
      "$(this.promise_filename) FAIL";
}
