#######################################################
#
# Test that you can select stderr/stdout in execresult
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

#######################################################

bundle agent test
{
  meta:
      "description" -> { "CFE-3108" }
        string => "Test that you can select stderr/stdout in execresult";
      "test_soft_fail" string => "windows",
        meta => { "ENT-10217" };

  vars:
      "result_with_stdout_stderr"
        string => execresult("$(G.echo) stdout; $(G.echo) stderr >&2", "useshell", "both");

      "result_with_stdout"
        string => execresult("$(G.echo) stdout; $(G.echo) stderr >&2", "useshell", "stdout");

      "result_with_stderr"
        string => execresult("$(G.echo) stdout; $(G.echo) stderr >&2", "useshell", "stderr");

  classes:
      "pass_stdout_stderr"
        scope => "namespace",
        expression => strcmp( "stdout$(const.n)stderr", $(result_with_stdout_stderr) );

      "pass_stdout"
        scope => "namespace",
        expression => strcmp( "stdout", $(result_with_stdout) );

      "pass_stderr"
        scope => "namespace",
        expression => strcmp( "stderr", $(result_with_stderr) );

  methods:
      "Pass/Fail"
        usebundle => dcs_passif("pass_stdout_stderr.pass_stdout.pass_stderr", $(this.promise_filename));
}

bundle agent __main__
{
  methods: "test";
}
