#######################################################
#
# Test cf-serverd related promises
#
# Tests copy_from encrypted digest verify (SMD5) zero-length file
#
#######################################################

body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
}

bundle agent test
{
  files:
      "$(G.testdir)/destfile_classic"
          copy_from => copy_src_file("classic"),
          classes => if_repaired("copied_classic");
      "$(G.testdir)/destfile_latest"
          copy_from => copy_src_file("latest"),
          classes => if_repaired("copied_latest");
}

#########################################################

body copy_from copy_src_file(protocol_version)
{
      protocol_version => "$(protocol_version)";

      source      => "$(G.testdir)/source_file";
      servers     => { "127.0.0.1" };
      copy_backup => "false";

      portnumber => "9876"; # localhost_open

      encrypt     => "true";
      compare     => "digest";
      verify      => "true";

      #purge       => "false";
      #type_check  => "true";
      #force_ipv4  => "true";
      trustkey => "true";
}

#######################################################

bundle agent check
{
  classes:
      "dummy" expression => regextract("(.*)\.sub", $(this.promise_filename), "fn");

      "empty_classic" and => { strcmp(filesize("$(G.testdir)/destfile_classic"),"0") };
      "empty_latest"  and => { strcmp(filesize("$(G.testdir)/destfile_latest"),"0") };

  reports:

    copied_classic.copied_latest.empty_classic.empty_latest::
      "$(fn[1]) Pass";
    !copied_classic|!copied_latest|!empty_classic|!empty_latest::
      "$(fn[1]) FAIL";
}
