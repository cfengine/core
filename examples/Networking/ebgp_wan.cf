##################################################
#
# eBGP wan peering example
#
#        R2
#      /
#   R1
#      \
#        R3
##################################################

bundle agent bgp()
{
  vars:

      # Shared data to orchestrate the pattern

      "net_adverts[R1]" slist => { "10.10.10.0/24", "10.10.20.10/24" };
      "net_adverts[R2]" slist => { "10.10.30.0/24", "10.10.40.0/24" };
      "net_adverts[R3]" slist => { "192.168.0/24" };

      "router_id[R1]" string => "1.0.0.1";
      "router_id[R2]" string => "1.0.0.2";
      "router_id[R3]" string => "1.0.0.3";

      "AS[R1]" int => "1";
      "AS[R2]" int => "2";
      "AS[R3]" int => "3";

  interfaces:

    R1::

      # To avoid a new entity, we use one of the interfaces pointing to
      # this AS as promiser. If several have routes to R2 then idempotence
      # will protect against possible repetition

      "swp14"
      comment => "Session to R2/AS[R2]",
      link_services => ebgp_session("$(router_id[R2])", "10.10.10.2", "$(AS[R2])");

      "swp35"
      comment => "Session to R3/AS[R3]",
      link_services => ebgp_session("$(router_id[R3])", "10.10.10.3", "$(AS[R3])");


    R2::
      # ... etc
    R3::
      # ... etc
}

################# TEMPLATES #######################

body link_services ebgp_session(loopback, directip, remoteas)
{
      bgp_session_neighbor => "$(directip)"; # or unnumbered  p2p so 1:1
      bgp_peer_as => "$(remoteas)";
      bgp_ttl_security => "1";
      bgp_advertisement_interval => "0";
      bgp_external_soft_reconfiguration_inbound => "true";
      bgp_advertise_families => {"ipv4_unicast", "ipv6_unicast"};
}

################# NODE SERVICE SETTINGS #######################

body routing_services control
{
      bgp_local_as => "$(bgp.AS[$(sys.uqname)])"; # get MY asn
      bgp_router_id => "$(bgp.router_id[$(sys.uqhost)])";
      bgp_ipv4_networks => { @(bgp.net_adverts[$(sys.uqname)]) };
      routing_service_log_file => "/var/run/log/quagga/bgpd.log";
      bgp_log_neighbor_changes => "true";
      bgp_redistribute => { "kernel", "static", "connected", "ospf" };
      bgp_graceful_restart => "true";
}

################# BUREAUCRACY #######################

body common control
{
      bundlesequence => { "clos" };
}
