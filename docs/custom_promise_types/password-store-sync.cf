promise agent git
{
  path => "/var/cfengine/modules/promises/git_using_lib.py";
  interpreter => "/usr/bin/python3";
}

promise agent gpg_keys
{
  path => "/var/cfengine/modules/promises/gpg.py";
  interpreter => "/usr/bin/python3";
}

bundle agent main
{
  vars:
    # for gpg_keys promise, pass a keylist data similar to this proposed standard with the addition of the `ascii` property
    # https://datatracker.ietf.org/doc/draft-mccain-keylist/ (from https://github.com/firstlookmedia/gpgsync project)
  #  "keylist" data => readjson("/home/user/keylist.json");

    # Or assembly the information using some policy data manipulation and jq (https://stedolan.github.io/jq/) magic
    "fingerprint_files" slist => findfiles("/home/user/.password-store/.pub-keys/*.fp");
    "keys[$(fingerprint_files)][fingerprint]" string => readfile( $(fingerprint_files) );
    "keys[$(fingerprint_files)][ascii]" string => readfile( regex_replace( $(fingerprint_files), ".fp$", ".asc", "") );
    "keylist" data => mapdata("json_pipe", '$(def.jq) {"keys":[.[]]}', keys);

  git:
    "/home/user/.password-store"
      repo => "https://github.com/user/my-passwords";

  gpg_keys:
    "/home/user/.gnupg"
      keylist => storejson( @(keylist[0]) );
}
