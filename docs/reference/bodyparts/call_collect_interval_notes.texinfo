
@i{History}: Was introduced in 3.4.0, Enterprise 3.0.0 (2012)

If option time is set, it causes the server daemon to peer with a policy
hub by attempting a connection at regular intervals of the value of the
parameter in minutes.

This feature is designed to allow Enterprise report collection from
hosts that are not directly addressable from a hub data-aggregation
process.  For example, if some of the clients of a policy hub are
behind a network address translator then the hub is not able to open a
channel to address them directly. The effect is to place a `collect
call' with the policy hub.

If this option is set, the client's cf-serverd will `peer' with the
server daemon on a policy hub. This means that, cf-serverd on an
unreachable (e.g. NATed) host will attempt to report in to the
cf-serverd on its assigned policy hub and offer it a short time window
in which to download reports over the established connection. The
effect is to establish a temporary secure tunnel between hosts,
initiated from the satellite host end. The connection is made in such
a way that host autonomy is not compromised. Either hub may refuse or
decline to play their role at any time, in the usual way (avoiding DOS
attacks). Normal access controls must be set for communication in both
directions.

Collect calling cannot be as efficient as data collection by the
cf-hub, as the hub is not able to load balance.  Hosts that use this
approach should exclude themselves from the cf-hub data collection.

The sequence of events is this:

@itemize 
@item Satellite cf-serverd connects to its registered policy hub
@item The satellite indentifies itself to authentication and access control
and sends a collect-call `pull' request to the hub
@item The hub might honour this, if the access control grants access.
@item If access is granted, the hub has @code{collect_window} seconds
to initiate a query to the satellite for its reports.
@item The policy hub indentifies itself to authentication and access control
and sends a query request to the hub to collect the reports.
@item When finished the satellite closes the tunnel.
@end itemize

The full configuration would look something like this
@verbatim

#########################################################
# Server config
#########################################################

body server control 

{
allowconnects         => { "10.10.10" , "::1" };
allowallconnects      => { "10.10.10" , "::1" };
trustkeysfrom         => { "10.10.10" , "::1" };

call_collect_interval => "5";
}

#########################################################

bundle server access_rules()

{
access:

  policy_hub::

   "collect_calls"
       resource_type => "query",
             admit   => { "10.10.10" }; # the apparent NAT address of the satellite

  satellite_hosts::
 
    "delta"
            comment => "Grant access to cfengine hub to collect report deltas",
      resource_type => "query",
            admit   => { "policy_hub" };

    "full"
            comment => "Grant access to cfengine hub to collect full report dump",
      resource_type => "query",
            admit   => { "policy_hub"  };
}


@end verbatim
