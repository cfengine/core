#######################################################
#
# CFE-2388: test body inheritance with parameters
#
#######################################################

body common control
{
        inputs => { "../../default.cf.sub" };
        bundlesequence  => { default("$(this.promise_filename)") };
        version => "1.0";
}

body copy_from from_ref(path1)
{
        source  => "$(init.referential_root_dir)/$(path1)";
}

body copy_from ref_for_level(level, path2)
{
        inherit_from => from_ref("$(level)/$(path2)");
}

body copy_from ref_common(path3)
{
        inherit_from => ref_for_level("common", $(path3));
}

body copy_from from_ref_override_parameters(path1)
{
        servers => { "foo" };
        source  => "$(init.referential_root_dir)/$(path1)";
}

body copy_from ref_for_level_override_parameters(level, path2)
{
        servers => { "localhost" };
        inherit_from => from_ref_override_parameters("$(level)/$(path2)");
}

body copy_from ref_common_override_parameters(path3)
{
        inherit_from => ref_for_level_override_parameters("common", $(path3));
}



bundle agent init
{
  vars:
      "referential_root_dir" string => "$(G.testdir)/ref";
      "target_filepath" string => "$(referential_root_dir)/testtarget";
      "target_filepath_override_parameters" string => "$(referential_root_dir)/testtarget_override_parameters";

      "targets" data => '[ target_filepath, target_filepath_override_parameters ]';

      "source_filepath" string => "service_x/tmp/fic1";

  methods:
      "" usebundle => file_make_mog("$(referential_root_dir)/common/$(source_filepath)", "",
                                   "644", $(this.promiser_uid), $(this.promiser_gid));

      "" usebundle => file_tidy($(targets));
}


bundle agent test
{
  files:
      "$(init.target_filepath)"
        copy_from => ref_common($(init.source_filepath)),
        perms => mog("644", $(this.promiser_uid), $(this.promiser_gid));

      "$(init.target_filepath_override_parameters)"
        copy_from => ref_common_override_parameters($(init.source_filepath)),
        perms => mog("644", $(this.promiser_uid), $(this.promiser_gid));
}

bundle agent check
{
  methods:
      "any"  usebundle => dcs_passif_filesexist(@(init.targets),
                                               $(this.promise_filename));
}
