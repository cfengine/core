#  Copyright (C) Cfengine AS

#  This file is part of Cfengine 3 - written and maintained by Cfengine AS.

#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; version 3.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA

# To the extent this program is licensed as part of the Enterprise
# versions of Cfengine, the applicable Commercial Open Source License
# (COSL) may apply to this file if you as a licensee so wish it. See
# included file COSL.txt.

######################################################################
#
# File editing
#
# Normal ordering:
# - delete
# - replace | column_edit
# - insert
# 
######################################################################


body common control

{
      version => "1.2.3";
      bundlesequence  => { "example"  };
}

########################################################

bundle agent example

{

  files:

      "/tmp/replacestring"

      create    => "true",
      edit_line => myedit("second");
}

########################################################

bundle edit_line myedit(parameter)
{
  vars:

      "edit_variable" string => "private edit variable is $(parameter)"; 

      
  replace_patterns:

      # replace shell comments with C comments

      "puppet"

      replace_with => With("cfengine 3");

}

########################################
# Bodies
########################################

body replace_with With(x)

{
      replace_value => "$(x)";
      occurrences => "first";
}

########################################

body select_region MySection(x)

{
      select_start => "\[$(x)\]";
      select_end => "\[.*\]";
}

