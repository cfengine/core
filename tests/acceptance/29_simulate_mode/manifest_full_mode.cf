body common control
{
      inputs => {
        "../default.cf.sub",
        "./prepare_files_for_simulate_tests.cf.sub",
        "./normalize_agent_output.cf.sub"
      };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}


bundle agent init
{
  methods:
    "prepare_files_for_simulate_tests";
}

bundle agent test
{
  meta:
    "test_soft_fail" string => "(solaris|aix|hpux)|(debian_7.i686)",
      meta => { "ENT-6537", "ENT-6540" };
      # ENT-6537 debian 7 dirent has extra ',' entry
      # ENT-6540 exotics fail to delete chroot
    "test_skip_needs_work" string => "(redhat_5|centos_5)",
      meta => { "ENT-6569" };
      # ENT-6569 on RHEL/CentOS 5, dirlisting consists of two unprintable characters

    "description" -> { "ENT-5301" }
      string => "Test that files promises in --simulate=manifest-full mode produce proper output and only make changes in chroot";

  commands:
    # add --verbose here and look at the .actual log for debugging sub policy runs
    "$(sys.cf_agent) -Kf $(this.promise_dirname)$(const.dirsep)promises.cf.sub --simulate=manifest-full > $(this.promise_filename).temp 2>&1"
      contain => in_shell,
      comment => "Run sub policy in manifest mode and capture output to $(this.promise_filename).actual file.";
}

bundle agent check
{
  methods:
    "normalize_agent_results" usebundle => normalize_agent_results("$(this.promise_filename).temp",
                                                                   "$(this.promise_filename).actual");
    "check" usebundle => dcs_check_diff("$(this.promise_filename).actual",
                                        "$(this.promise_filename).expected",
                                        "$(this.promise_filename)");
}
