#######################################################
#
# Test regextract
#
#######################################################

body common control
{
  inputs => { "../../default.cf.sub" };
  bundlesequence  => { default("$(this.promise_filename)") };
  version => "1.0";
}

#######################################################

bundle agent init
{
}

#######################################################

bundle agent test
{
  vars:
    parsed::
      "part1_as_int" int => "$(part[1])";
      "part2_as_int" int => "$(part[2])";

      "part1_as_str" string => "$(part[1])";
      "part2_as_str" string => "$(part[2])";

  classes:
      "parsed" expression => regextract("^node-(\d+)-0*(\d+)", "node-8-01", "part");
}


#######################################################

bundle agent check
{
  classes:
      "ok1" expression => strcmp("$(test.part1_as_int)", "$(test.part1_as_str)");
      "ok2" expression => strcmp("$(test.part2_as_int)", "$(test.part2_as_str)");

      "ok" and => { "ok1", "ok2"  };
      
  reports:
    ok::
        "$(this.promise_filename) Pass";
    !ok::
        "$(this.promise_filename) FAIL";
}
