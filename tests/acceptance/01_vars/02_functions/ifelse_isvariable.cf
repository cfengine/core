body common control
{
      inputs => { "../../default.cf.sub" };
      bundlesequence  => { default("$(this.promise_filename)") };
      version => "1.0";
}

bundle agent init
{
  vars:
      "passwd_file"
        string => "/tmp/custom_passwd";
}

bundle agent test
{
  meta:
      "description"
        string => "Test that ifelse can use the result of isvariable
                   as a class identifer";

      "test_soft_fail"
        string => "any",
        meta => { "redmine7878" };

  vars:
      # Since init.passwd_file is defined, I expect the value to be
      # the value of init.passwd_file
      "use_passwd_file"
        string => ifelse( isvariable("init.passwd_file"), $(init.passwd_file),
                         "/etc/passwd");

      # Since init.shadow_file is not defined, I expect that the value
      # will be "/etc/shadow"
      "use_shadow_file"
        string => ifelse( isvariable("init.shadow_file"), $(init.shadow_file),
                          "/etc/shadow");
}

bundle agent check
{
  classes:
      "ok_passwd_file"
        expression => strcmp( "/tmp/custom_passwd", $(init.passwd_file) );

      "ok_shadow_file"
        expression => strcmp( "/etc/shadow", $(init.use_shadow_file) );

      "ok" and => { "ok_passwd_file", "ok_shadow_file" };

  reports:
    DEBUG::
      "Found test.use_passwd_file = $(test.use_passwd_file) to be as expected"
        if => "ok_passwd_file";

      "Found test.use_shadow_file = $(test.use_shadow_filee) to be as expected"
         if => "ok_shadow_file";

      "Found value for test.use_passwd_file to be INCORRECT
       expected '/tmp/custom_passwd' got '$(test.use_passwd_file)'"
        unless => "ok_passwd_file";

      "Found value for test.use_shadow_file to be INCORRECT
       expected '/etc/shadow' got '$(test.use_shadow_file)'"
        unless => "ok_shadow_file";

    ok::
      "$(this.promise_filename) Pass";

    !ok::
      "$(this.promise_filename) FAIL";
}
