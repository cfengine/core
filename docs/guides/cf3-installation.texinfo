\input texinfo-altfont
\input texinfo-logo
\input texinfo
@selectaltfont{cmbright}
@setlogo{CFEngineFrontPage}

@c *********************************************************************
@c
@c  This is a TEXINFO file. It generates both TEX documentation and
@c  the "on line" documentation "info" files.
@c
@c  The file is structured like a programming language. Each chapter
@c  starts with a chapter comment.
@c
@c  Menus list the subsections so that an online info-reader can parse
@c  the file hierarchically.
@c
@c ***********************************************************************
@c %** start of header
@setfilename cf3-installation.info
@settitle CFEngine Installation Guide
@setchapternewpage odd
@c %** end of header

@titlepage
@title CFEngine Installation Guide
@subtitle A CFEngine Handbook
@author CFEngine AS


@page

@cartouche
@quotation
This short guide explains how to install the software and get it running. 
@end quotation
@end cartouche

@vskip 0pt plus 1filll
Copyright @copyright{} 2011- CFEngine AS

@end titlepage


@c *************************** File begins here ************************


@ifinfo
@dircategory CFEngine Training
@direntry
* CFEngine Modularization:
                      CFEngine is a language based tool specifically
                      designed for configuring and maintaining
                      Unix-like operating systems attached
                      to a TCP/IP network.
@end direntry
@end ifinfo

@ifnottex
@node Top, CFEngine Installation Guide, (dir), (dir)
@top CFEngine Installation Guide
@end ifnottex

@iftex
@contents
@end iftex

@ifhtml
@html
<a href="#Contents"><h1>COMPLETE TABLE OF CONTENTS</h1></a>
<h2>Summary of contents</h2>
@end html
@end ifhtml

@ifhtml
@html
<a name="Contents">
@contents
@end html
@end ifhtml

@menu
* CFEngine Installation Guide::        
@end menu

@c *****************************************************
@c * CHAPTER
@c *****************************************************
@node CFEngine Installation Guide,  , Top, Top
@chapter CFEngine Installation Guide

The quickest way to get started with CFEngine is to download and install binary packages, available from @url{http://cfengine.com/inside/myspace}. Installing and bootstrapping @footnote{CFE Community 3.2 and up} these is a trivial operation, putting you two steps away from testing your first CFEngine policies. The other option is to download and compile the source code, available from @url{http://cfengine.com/source_code}.

This guide assumes that you are logged in as root, use @code{sudo} if you wish to install from a regular user account (e.g. @code{host$ sudo rmp -ihv} @i{packages}).

@menu
* Install from packages::  
* Build from source (CFE Community)::  
* Bootstrap from source::
* Check installation::
* Next steps::       
@end menu

@node  Install from packages, Build from source (CFE Community), CFEngine Installation Guide, CFEngine Installation Guide
@section Install from packages

@menu
* Unpack the software::       
* Bootstrap CFEngine::          
@end menu

@node Unpack the software, Bootstrap CFEngine, Install from packages, Install from packages
@subsection Unpack the software

System specific commands to unpack the software:
@table @i
@item Red Hat or SUSE family
@example
host# rpm -ihv @var{packages}
@end example

@item Debian family
@example
host# dpkg --install  @var{packages}
@end example
@end table 

The below examples are given for a Red Hat or SUSE, adapt them according to your system. To unpack:

@example
   host# rpm -ihv cfengine-community-3.x.y.rpm
@end example


@node Bootstrap CFEngine,  , Unpack the software, Install from packages
@subsection Bootstrap CFEngine
@cartouche
The below procedure is valid for CFE Nova and CFE Community v3.2 and up (packages for v3.2 will be released soon). For earlier versions of CFE Community binaries, you may proceed directly to section 1.5 Next steps.
@end cartouche

This procedure applies to all hosts, but you should bootstrap the hub (policy server) first. Find the hostname or IP address of the hub, here we assume the address is '123.456.789.123' (do not bootstrap with a localhost address).
@verbatim

   host# /var/cfengine/bin/cf-agent --bootstrap --policy-server 123.456.789.123

@end verbatim

CFEngine will output diagnostic information upon bootstrap (written to command line and syslog; cf-agent will also return a value: ERROR: 1, SUCCESS: 0). Error messages will be displayed if bootstrapping failed, pursue these to get and indication of what went wrong and correct accordingly. If all is well you should see the following in the output:

@verbatim

-> Bootstrap to 123.456.789.123 completed successfully

@end verbatim

@sp 1
CFEngine should now be up and running on your system. It will copy its default policy files into @file{masterfiles} on the hub (policy server) provided that the directory is empty (fresh install). When the clients are bootstrapped, they will contact the hub and copy them to their @file{inputs} directory.


@node  Build from source (CFE Community), Bootstrap from source, Install from packages, CFEngine Installation Guide
@section Build from source

See reference manual or INSTALL file in source code for dependencies. To build from source:
@verbatim
   host# tar zxf cfengine-3.x.y.tar.gz
   host# cd cfengine-3.x.y
   host# ./configure
   host# make
   host# make install
@end verbatim


@node Bootstrap from source,  Check installation, Build from source (CFE Community), CFEngine Installation Guide
@section Bootstrap from source

Find the hostname or IP address of the hub, here we assume the address is '123.456.789.123' (do not bootstrap with a localhost address).

@noindent On the hub (policy server):
@verbatim
   host# /var/cfengine/bin/cf-key
   host# cp /var/cfengine/share/CoreBase/*.cf /var/cfengine/masterfiles/
   host# /var/cfengine/bin/cf-agent --bootstrap --policy-server 123.456.789.123
@end verbatim

@itemize
@item The first run of cf-key will complain but it will create the local work directory tree, @code{/var/cfengine}, as well as a public and private key.
@item We use "cp" to populate the the binaries cache in @code{/var/cfengine/bin/}.
@item We also use "cp" to populate the @code{masterfiles} directory with the default configuration.
@item The bootstrapping will configure the hub and make CFEngine run in the background.
@end itemize

@noindent On the clients (all other machines):
@verbatim
   host# /var/cfengine/bin/cf-key
   host# /var/cfengine/bin/cf-agent --bootstrap --policy-server 123.456.789.123
@end verbatim

@itemize
@item The first run of cf-key will complain but it will create the local work directory tree, @code{/var/cfengine}, as well as a public and private key.
@item Then we use "cp" to populate the the binaries cache in @code{/var/cfengine/bin/}.
@item The bootstrapping will contact the hub (policy server), fetch the default configuration (policy files) to place them in @code{/var/cfengine/inputs/}, and make CFEngine run in the background.
@end itemize

@sp 1
CFEngine should now be up and running on your system.


@node Check installation,  Next steps, Bootstrap from source, CFEngine Installation Guide
@section Check installation

@cartouche
The below procedure is valid for CFE Nova and CFE Community v3.2 and up (packages for v3.2 will be released soon).
@end cartouche

The default configuration of CFEngine does nothing other than look after itself, running in the background. CFEngine will not display any messages if everything is OK, it will only look for
possible policy updates from @file{/var/cfengine/masterfiles}
on the hub (policy server).

How to actively assess the success of your installation:

@enumerate
@item Look at the process list on the systems with @samp{ps waux | grep cf}.
You should be able to see @code{cf-execd} running, and eventually other processes from 
the CFEngine suite like @code{cf-monitord} @code{cf-serverd}. CFE Nova users should 
also eventually see @code{cf-hub} running on the hub. Note that it may take 5--10 minutes before all the
processes get started.

@item Look for files in @file{/var/cfengine/inputs} (Unix)
or @file{C:\Program Files\Cfengine\inputs} (Windows). 
@end enumerate

@node Next steps,  , Check installation, CFEngine Installation Guide
@section Next steps

We recommend the following reading:

@itemize 
@item CFEngine Concepts: @url{http://cfengine.com/manuals/cf3-conceptguide.html}
@item Get started, first promises: @url{http://cfengine.com/manuals/cf3-getstarted.html}
@end itemize

@noindent For a complete overview:
@itemize
@item Tutorial: @url{http://cfengine.com/manuals/cf3-tutorial.html}
@item Reference manual: @url{http://cfengine.com/manuals/cf3-Reference.html}
@end itemize

@noindent Links to external resources:
@itemize
@item Getting Started with CFEngine 3 by Vertical Sysadmin:@*
@url{http://www.verticalsysadmin.com/cfengine/Getting_Started_with_CFEngine_3.pdf}
@item CFEngine 3 Beginning Examples:@*
@url{http://www.verticalsysadmin.com/cfengine/beginning_examples/}@*
This is, basically, a selection from /var/cfengine/share/doc/examples/ which has over 200 examples.
@item "CFEngine 3 Tutorial" by Neil Watson:@*
@url{http://watson-wilson.ca/2011/05/cfengine-3-cookbook-begins.html}
@end itemize

@c ------------------------------------------------------------------

@ifhtml
@html
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https:// 
ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google- 
analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-2576171-2");
pageTracker._initData();
pageTracker._trackPageview();
</script>
@end html
@end ifhtml

@bye
